name: Docker Build

on:
  push:
  schedule:
    - cron: '0 0 * * *'

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build Docker Image
    # Set version to master for nightly builds
    env:
      ZM_VERSION: master
    strategy:
      matrix:
        include:
          - arch: linux/386
            arch_friendly: i386
            s6_arch: x86
          - arch: linux/amd64
            arch_friendly: amd64
            s6_arch: amd64

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          driver-opts: |
            env.BUILDKIT_STEP_LOG_MAX_SIZE=1000000
            env.BUILDKIT_STEP_LOG_MAX_SPEED=100000000
          install: true

      # build nightly
      - name: Build Nightly
        if: ${{ startsWith(github.ref, 'refs/heads/') }}
        run: |
          set -x
          docker build \
            --build-arg ZM_VERSION=${{ env.ZM_VERSION }} \
            --tag ci:${{ github.run_number }} \
            --platform ${{ matrix.arch }} \
            --progress plain \
            --file ./Dockerfile \
            --load \
            .

      # Build tagged version
      - name: Build Tag
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        run: |
          set -x
          docker build \
            --build-arg ZM_VERSION=${GITHUB_REF##*/} \
            --tag ci:${{ github.run_number }} \
            --platform ${{ matrix.arch }} \
            --progress plain \
            --file ./Dockerfile \
            --load \
            .

      - name: Inspect
        run: |
          set -x
          docker image inspect ci:${{ github.run_number }}

      - name: Save tarball
        run: |
          set -x
          docker save --output ci-${{ matrix.arch_friendly }}-${{ github.run_number }}.tar.gz ci:${{ github.run_number }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: ci-${{ matrix.arch_friendly }}-${{ github.run_number }}
          path: ci-${{ matrix.arch_friendly }}-${{ github.run_number }}.tar.gz

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ci-${{ matrix.arch_friendly }}-${{ github.run_number }}.tar.gz
          draft: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test:
    needs: build
    name: Test Image
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch:
          - i386
          - amd64
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download container artifact
        uses: actions/download-artifact@v2
        with:
          name: ci-${{ matrix.arch }}-${{ github.run_number }}

      - name: Import image
        run: |
          docker load --input ci-${{ matrix.arch }}-${{ github.run_number }}.tar.gz

      - name: Run image
        run: |
          docker tag ci:${{ github.run_number }} ci:latest
          docker-compose -f docker-compose.test.yml up -d
          docker-compose -f docker-compose.test.yml logs &
          sleep 120
          docker stop zoneminder
          sleep 60
          docker-compose -f docker-compose.test.yml down

  publish:
    needs: test
    name: Publish Image
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch:
          - i386
          - amd64
        registry:
          - {
            url: "https://index.docker.io/v1/",
            username: DOCKER_USERNAME,
            password: DOCKER_PASSWORD,
            repo: yaoa/zoneminder-base
          }
          - {
            url: ghcr.io/zoneminder-containers,
            username: GCHR_USERNAME,
            password: GHCR_PAT,
            repo: ghcr.io/zoneminder-containers/zoneminder-base
          }
    steps:
      - name: Download container artifact
        uses: actions/download-artifact@v2
        with:
          name: ci-${{ matrix.arch }}-${{ github.run_number }}

      - name: Import image
        run: |
          docker load --input ci-${{ matrix.arch }}-${{ github.run_number }}.tar.gz

      - name: Docker login
        run: |
          docker login ${{ matrix.registry.url }} -u ${{ secrets[matrix.registry.username] }} -p ${{ secrets[matrix.registry.password] }}

      # arch-run_num
      - name: Deploy Run Number (arch-run_num)
        run: |
          set -x
          docker tag ci:${{ github.run_number }} ${{ matrix.registry.repo }}:${{ matrix.arch }}-${{ github.run_number }}
          docker push ${{ matrix.registry.repo }}:${{ matrix.arch }}-${{ github.run_number }}
          echo ${{ matrix.registry.repo }}:${{ matrix.arch }}-${{ github.run_number }} published

      # arch-branch-sha
      - name: Deploy Commit Hash (arch-branch-sha)
        if: ${{ github.sha != '' }}
        run: |
          set -x
          docker tag ci:${{ github.run_number }} ${{ matrix.registry.repo }}:${{ matrix.arch }}-${GITHUB_REF##*/}-$GITHUB_SHA
          docker push ${{ matrix.registry.repo }}:${{ matrix.arch }}-${GITHUB_REF##*/}-$GITHUB_SHA
          echo ${{ matrix.registry.repo }}:${{ matrix.arch }}-${GITHUB_REF##*/}-$GITHUB_SHA published

      # latest
      - name: Deploy Latest (latest)
        if: ${{ github.ref == 'refs/heads/master' }}
        run: |
          set -x
          docker tag ci:${{ github.run_number }} ${{ matrix.registry.repo }}:${{ matrix.arch }}-latest
          docker push ${{ matrix.registry.repo }}:${{ matrix.arch }}-latest
          echo ${{ matrix.registry.repo }}:${{ matrix.arch }}-latest published

      # arch-branch
      - name: Deploy Branch (arch-branch)
        if: ${{ startsWith(github.ref, 'refs/heads/') }}
        run: |
          set -x
          docker tag ci:${{ github.run_number }} ${{ matrix.registry.repo }}:${{ matrix.arch }}-${GITHUB_REF##*/}
          docker push ${{ matrix.registry.repo }}:${{ matrix.arch }}-${GITHUB_REF##*/}
          echo ${{ matrix.registry.repo }}:${{ matrix.arch }}-${GITHUB_REF##*/} published

      # arch-branch-run_num
      - name: Deploy Branch and Run Number (arch-branch-run_num)
        if: ${{ startsWith(github.ref, 'refs/heads/') }}
        run: |
          set -x
          docker tag ci:${{ github.run_number }} ${{ matrix.registry.repo }}:${{ matrix.arch }}-${GITHUB_REF##*/}-${{ github.run_number }}
          docker push ${{ matrix.registry.repo }}:${{ matrix.arch }}-${GITHUB_REF##*/}-${{ github.run_number }}
          echo ${{ matrix.registry.repo }}:${{ matrix.arch }}-${GITHUB_REF##*/}-${{ github.run_number }} published

      # arch-tag
      - name: Deploy Tag (arch-tag)
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        run: |
          set -x
          docker tag ci:${{ github.run_number }} ${{ matrix.registry.repo }}:${{ matrix.arch }}-${GITHUB_REF##*/}
          docker push ${{ matrix.registry.repo }}:${{ matrix.arch }}-${GITHUB_REF##*/}
          echo ${{ matrix.registry.repo }}:${{ matrix.arch }}-${GITHUB_REF##*/} published

      # arch-branch-run_num
      - name: Deploy Tag and Run Number (arch-branch-run_num)
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        run: |
          set -x
          docker tag ci:${{ github.run_number }} ${{ matrix.registry.repo }}:${{ matrix.arch }}-${GITHUB_REF##*/}-${{ github.run_number }}
          docker push ${{ matrix.registry.repo }}:${{ matrix.arch }}-${GITHUB_REF##*/}-${{ github.run_number }}
          echo ${{ matrix.registry.repo }}:${{ matrix.arch }}-${GITHUB_REF##*/}-${{ github.run_number }} published

  create_manifest:
    needs: publish
    name: Create Manifest
    runs-on: ubuntu-latest
    strategy:
      matrix:
        registry:
          - {
            url: "https://index.docker.io/v1/",
            username: DOCKER_USERNAME,
            password: DOCKER_PASSWORD,
            repo: yaoa/zoneminder-base
          }
          - {
            url: ghcr.io/zoneminder-containers,
            username: GCHR_USERNAME,
            password: GHCR_PAT,
            repo: ghcr.io/zoneminder-containers/zoneminder-base
          }
    steps:
      - name: Enable Experimental Docker Features
        run: |
          export DOCKER_CLI_EXPERIMENTAL="enabled"
          echo "DOCKER_CLI_EXPERIMENTAL=${DOCKER_CLI_EXPERIMENTAL}" >> $GITHUB_ENV

      - name: Docker login
        run: |
          docker login ${{ matrix.registry.url }} -u ${{ secrets[matrix.registry.username] }} -p ${{ secrets[matrix.registry.password] }}

      # branch-sha
      - name: Deploy Commit ID (sha)
        if: ${{ github.sha != '' }}
        run: |
          set -x
          docker manifest create \
            ${{ matrix.registry.repo }}:${GITHUB_REF##*/}-$GITHUB_SHA \
            ${{ matrix.registry.repo }}:i386-${{ github.run_number }} \
            ${{ matrix.registry.repo }}:amd64-${{ github.run_number }}

          docker manifest push ${{ matrix.registry.repo }}:${GITHUB_REF##*/}-$GITHUB_SHA
          echo ${{ matrix.registry.repo }}:${GITHUB_REF##*/}-$GITHUB_SHA published

      # run_number
      - name: Deploy Run Number (run_number)
        if: ${{ github.sha != '' }}
        run: |
          set -x
          docker manifest create \
            ${{ matrix.registry.repo }}:$GITHUB_RUN_NUMBER \
            ${{ matrix.registry.repo }}:i386-${{ github.run_number }} \
            ${{ matrix.registry.repo }}:amd64-${{ github.run_number }}

          docker manifest push ${{ matrix.registry.repo }}:$GITHUB_RUN_NUMBER
          echo ${{ matrix.registry.repo }}:$GITHUB_RUN_NUMBER published

      # latest
      - name: Deploy Latest (latest)
        if: ${{ github.ref == 'refs/heads/master' }}
        run: |
          set -x
          docker manifest create \
            ${{ matrix.registry.repo }}:latest \
            ${{ matrix.registry.repo }}:i386-${{ github.run_number }} \
            ${{ matrix.registry.repo }}:amd64-${{ github.run_number }}

          docker manifest push ${{ matrix.registry.repo }}:latest
          echo ${{ matrix.registry.repo }}:latest published

      # branch
      - name: Deploy Branch (branch)
        if: ${{ startsWith(github.ref, 'refs/heads/') }}
        run: |
          set -x
          docker manifest create \
            ${{ matrix.registry.repo }}:${GITHUB_REF##*/} \
            ${{ matrix.registry.repo }}:i386-${{ github.run_number }} \
            ${{ matrix.registry.repo }}:amd64-${{ github.run_number }}

          docker manifest push ${{ matrix.registry.repo }}:${GITHUB_REF##*/}
          echo ${{ matrix.registry.repo }}:${GITHUB_REF##*/} published

      # branch-run_number
      - name: Deploy Branch and Run Number (branch-run_number)
        if: ${{ startsWith(github.ref, 'refs/heads/') }}
        run: |
          set -x
          docker manifest create \
            ${{ matrix.registry.repo }}:${GITHUB_REF##*/}-$GITHUB_RUN_NUMBER \
            ${{ matrix.registry.repo }}:i386-${{ github.run_number }} \
            ${{ matrix.registry.repo }}:amd64-${{ github.run_number }}

          docker manifest push ${{ matrix.registry.repo }}:${GITHUB_REF##*/}-$GITHUB_RUN_NUMBER
          echo ${{ matrix.registry.repo }}:${GITHUB_REF##*/}-$GITHUB_RUN_NUMBER published

      # tag
      - name: Deploy Tag
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        run: |
          set -x
          docker manifest create \
            ${{ matrix.registry.repo }}:${GITHUB_REF##*/} \
            ${{ matrix.registry.repo }}:i386-${{ github.run_number }} \
            ${{ matrix.registry.repo }}:amd64-${{ github.run_number }}

          docker manifest push ${{ matrix.registry.repo }}:${GITHUB_REF##*/}
          echo ${{ matrix.registry.repo }}:${GITHUB_REF##*/} published

      # tag-run_number
      - name: Deploy Tag and Run Number (tag-run_number)
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        run: |
          set -x
          docker manifest create \
            ${{ matrix.registry.repo }}:${GITHUB_REF##*/}-$GITHUB_RUN_NUMBER \
            ${{ matrix.registry.repo }}:i386-${{ github.run_number }} \
            ${{ matrix.registry.repo }}:amd64-${{ github.run_number }}

          docker manifest push ${{ matrix.registry.repo }}:${GITHUB_REF##*/}-$GITHUB_RUN_NUMBER
          echo ${{ matrix.registry.repo }}:${GITHUB_REF##*/}-$GITHUB_RUN_NUMBER published
